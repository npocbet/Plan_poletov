
&НаКлиенте
Процедура РейсПриИзменении(Элемент)
	Стр = ДанныеРейса(Объект.Рейс);
	Если Стр.Успех Тогда 
		Объект.АэропортВылета = Стр.АэропортВылета;
		Объект.АэропортПрилета = Стр.АэропортПрилета;
		Элементы.АэропортВылета.Доступность = Ложь;
		Элементы.АэропортПрилета.Доступность = Ложь;		
	ИначеЕсли (не Стр.Успех) и (Стр.Код = -2) Тогда 
		Элементы.АэропортВылета.Доступность = Истина;
		Элементы.АэропортПрилета.Доступность = Истина;
		Элементы.АэропортВылета.ОтметкаНезаполненного = Истина;
		Элементы.АэропортПрилета.ОтметкаНезаполненного = Истина;
		Объект.АэропортВылета = Стр.АэропортВылета;
		Объект.АэропортПрилета = Стр.АэропортПрилета;
	Иначе 	
		Элементы.АэропортВылета.Доступность = Истина;
		Элементы.АэропортПрилета.Доступность = Истина;
		Элементы.АэропортВылета.ОтметкаНезаполненного = Истина;
		Элементы.АэропортПрилета.ОтметкаНезаполненного = Истина;
		Объект.АэропортВылета = Стр.АэропортВылета;
		Объект.АэропортПрилета = Стр.АэропортПрилета;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "У рейса заполнен только 1 а/п. Должны быть заполнены либо оба, либо ни одного!";
		Сообщение.Поле = "Рейс";
		Сообщение.УстановитьДанные(Объект);
		Сообщение.Сообщить();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция  ДанныеРейса(Рейс)
	Выборка = Новый Структура;
	Если (Рейс.АэропортВылета = Справочники.Аэропорты.ПустаяСсылка()) и (Рейс.АэропортПрилета = Справочники.Аэропорты.ПустаяСсылка()) Тогда 
		Выборка.Вставить("Успех", Ложь);
		Выборка.Вставить("Код", -2);
		Выборка.Вставить("АэропортПрилета", Справочники.Аэропорты.ПустаяСсылка());
		Выборка.Вставить("АэропортВылета", Справочники.Аэропорты.ПустаяСсылка());
	ИначеЕсли (Рейс.АэропортВылета = Справочники.Аэропорты.ПустаяСсылка()) или (Рейс.АэропортПрилета = Справочники.Аэропорты.ПустаяСсылка()) Тогда	
		Выборка.Вставить("Успех", Ложь);
		Выборка.Вставить("Код", -1);
		Выборка.Вставить("АэропортПрилета", Справочники.Аэропорты.ПустаяСсылка());
		Выборка.Вставить("АэропортВылета", Справочники.Аэропорты.ПустаяСсылка());
	Иначе 
		Выборка.Вставить("Успех", Истина);
		Выборка.Вставить("АэропортПрилета", Рейс.АэропортПрилета);
		Выборка.Вставить("АэропортВылета", Рейс.АэропортВылета);	
	КонецЕсли;
	Возврат Выборка;
КонецФункции	

&НаСервере
Процедура ПолучитьДанныеСОПНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СвязьДанныеСОППрилетВылет.ПассажирыВзрослые КАК ПассажирыВзрослые,
		|	СвязьДанныеСОППрилетВылет.ПассажирыДети КАК ПассажирыДети,
		|	СвязьДанныеСОППрилетВылет.ПассажирыМалыши КАК ПассажирыМалыши,
		|	СвязьДанныеСОППрилетВылет.РучнаяКладь КАК РучнаяКладь,
		|	СвязьДанныеСОППрилетВылет.Багаж КАК Багаж,
		|	СвязьДанныеСОППрилетВылет.Почта КАК Почта,
		|	СвязьДанныеСОППрилетВылет.Груз КАК Груз
		|ИЗ
		|	РегистрСведений.СвязьДанныеСОППрилетВылет КАК СвязьДанныеСОППрилетВылет
		|ГДЕ
		|	СвязьДанныеСОППрилетВылет.ПрилетВылет = &ПрилетВылет";
	
	Запрос.УстановитьПараметр("ПрилетВылет", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если РезультатЗапроса.Пустой() Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Диспетчер СОП еще не ввел данные по этому документу";
		Сообщение.Сообщить();
	Иначе 
		ВыборкаДетальныеЗаписи.Следующий();
		Объект.ПассажирыВзрослые = ВыборкаДетальныеЗаписи.ПассажирыВзрослые;
		Объект.ПассажирыДети = ВыборкаДетальныеЗаписи.ПассажирыДети;
		Объект.ПассажирыМалыши = ВыборкаДетальныеЗаписи.ПассажирыМалыши;
		Объект.Почта = ВыборкаДетальныеЗаписи.Почта;
		Объект.Груз = ВыборкаДетальныеЗаписи.Груз;
		Объект.РучнаяКладь = ВыборкаДетальныеЗаписи.РучнаяКладь;
		Объект.Багаж = ВыборкаДетальныеЗаписи.Багаж;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Данные успешно загружены";
		Сообщение.Сообщить();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеСОП(Команда)
	ПолучитьДанныеСОПНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	СтруктураДанныхСОП = СравнитьДанныеСДаннымиСОП();
	
	Если СтруктураДанныхСОП.Свойство("ОтличаетсяОтДанныхСоп") Тогда 
		Если СтруктураДанныхСОП.ОтличаетсяОтДанныхСоп Тогда 
			Отказ = Истина;
			ЗадатьВопрос(СтруктураДанныхСОП);
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция СравнитьДанныеСДаннымиСОП() 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СвязьДанныеСОППрилетВылет.ПассажирыВзрослые КАК ПассажирыВзрослые,
		|	СвязьДанныеСОППрилетВылет.ПассажирыДети КАК ПассажирыДети,
		|	СвязьДанныеСОППрилетВылет.ПассажирыМалыши КАК ПассажирыМалыши,
		|	СвязьДанныеСОППрилетВылет.РучнаяКладь КАК РучнаяКладь,
		|	СвязьДанныеСОППрилетВылет.Багаж КАК Багаж,
		|	СвязьДанныеСОППрилетВылет.Почта КАК Почта,
		|	СвязьДанныеСОППрилетВылет.Груз КАК Груз
		|ИЗ
		|	РегистрСведений.СвязьДанныеСОППрилетВылет КАК СвязьДанныеСОППрилетВылет
		|ГДЕ
		|	СвязьДанныеСОППрилетВылет.ПрилетВылет = &ПрилетВылет";
	
	Запрос.УстановитьПараметр("ПрилетВылет", объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СтруктураДанных = Новый Структура;
	
	Если не РезультатЗапроса.Пустой() Тогда 
		ВыборкаДетальныеЗаписи.Следующий();
		ОтличаетсяОтДанныхСоп = Ложь;
		Если (Объект.ПассажирыВзрослые <> ВыборкаДетальныеЗаписи.ПассажирыВзрослые) или (Объект.ПассажирыДети <> ВыборкаДетальныеЗаписи.ПассажирыДети)
			или (Объект.ПассажирыМалыши <> ВыборкаДетальныеЗаписи.ПассажирыМалыши) или (Объект.Почта <> ВыборкаДетальныеЗаписи.Почта) или (Объект.Груз <> ВыборкаДетальныеЗаписи.Груз)
			или (Объект.РучнаяКладь <> ВыборкаДетальныеЗаписи.РучнаяКладь)или (Объект.Багаж <> ВыборкаДетальныеЗаписи.Багаж) 
			Тогда
			ОтличаетсяОтДанныхСоп = Истина;
		КонецЕсли;
		СтруктураДанных.Вставить("ОтличаетсяОтДанныхСоп",ОтличаетсяОтДанныхСоп);
		Если ОтличаетсяОтДанныхСоп Тогда
			СтруктураДанных.Вставить("ПассажирыВзрослые",ВыборкаДетальныеЗаписи.ПассажирыВзрослые);
			СтруктураДанных.Вставить("ПассажирыДети",ВыборкаДетальныеЗаписи.ПассажирыДети);
			СтруктураДанных.Вставить("ПассажирыМалыши",ВыборкаДетальныеЗаписи.ПассажирыМалыши);
			СтруктураДанных.Вставить("Почта",ВыборкаДетальныеЗаписи.Почта);
			СтруктураДанных.Вставить("Груз",ВыборкаДетальныеЗаписи.Груз);
			СтруктураДанных.Вставить("РучнаяКладь",ВыборкаДетальныеЗаписи.РучнаяКладь);
			СтруктураДанных.Вставить("Багаж",ВыборкаДетальныеЗаписи.Багаж);
		КонецЕсли;		
	КонецЕсли;
	
	Возврат СтруктураДанных;
КонецФункции	

&НаКлиенте 
Процедура ЗадатьВопрос(Структура) 
	Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопрос", ЭтотОбъект, Структура); // Прописываем название процедуры-обработчика. 
	ПоказатьВопрос(Оповещение, "Изменить значения?", // вместо привычного "Вопрос", теперь "ПоказатьВопрос" 
	РежимДиалогаВопрос.ДаНет, 0, // задержка (секунды). необязательно 
	КодВозвратаДиалога.Да, // задает кнопку по умолчанию. необязательно 
	"ДАННЫЕ СОП ДЛЯ ЭТОГО ДОКУМЕНТА ОТЛИЧАЮТСЯ" // устанавливаем заголовок. необязательно
	); 
КонецПроцедуры 

&НаКлиенте 
Процедура ПослеОтветаНаВопрос(Результат, Параметры) Экспорт 
	Если Результат = КодВозвратаДиалога.Да Тогда 
		Объект.ПассажирыВзрослые = Параметры.ПассажирыВзрослые;
		Объект.ПассажирыДети = Параметры.ПассажирыДети;
		Объект.ПассажирыМалыши = Параметры.ПассажирыМалыши;
		Объект.Почта = Параметры.Почта;
		Объект.Груз = Параметры.Груз;
		Объект.РучнаяКладь = Параметры.РучнаяКладь;
		Объект.Багаж = Параметры.Багаж;
		Сообщить("Данные успешно изменены"); 
	Иначе 
		Сообщить("Данные остались прежними"); 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура УходЗапаснойАППриИзменении(Элемент)
	Если Объект.УходНаЗапаснойАП Тогда
		Элементы.ЗапаснойАП.Доступность = Истина;
	Иначе 
		Элементы.ЗапаснойАП.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НеприбылПриИзменении(Элемент)
	Если Объект.Неприбыл Тогда
		Элементы.ПричинаНеприбытия.Доступность = Истина;
	Иначе 
		Элементы.ПричинаНеприбытия.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Поле1ПриИзменении(Элемент)
	Если Объект.ЗадержкаПрилета Тогда
		Элементы.ПричинаОпоздания.Доступность = Истина;
	Иначе 
		Элементы.ПричинаОпоздания.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

