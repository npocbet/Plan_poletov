
Процедура Печать(ТабДок, Ссылка) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
	Макет = Документы.ФормаС.ПолучитьМакет("Печать");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФормаС.ВладелецВС КАК ВладелецВС,
	|	ФормаС.Дата КАК Дата,
	|	ФормаС.ДатаИВремяВылета КАК ДатаИВремяВылета,
	|	ФормаС.ДатаИВремяПосадки КАК ДатаИВремяПосадки,
	|	ФормаС.Итого КАК Итого,
	|	ФормаС.КурсВалюты КАК КурсВалюты,
	|	ФормаС.Масса КАК Масса,
	|	ФормаС.Плательщик КАК Плательщик,
	|	ФормаС.РейсОтправления КАК РейсОтправления,
	|	ФормаС.РейсПрибытия КАК РейсПрибытия,
	|	ФормаС.СпособОплаты КАК СпособОплаты,
	|	ФормаС.ТипВС КАК ТипВС,
	|	ФормаС.Услуги.(
	|		НомерСтроки КАК НомерСтроки,
	|		Услуга КАК Услуга,
	|		ПревышениеРегламента КАК ПревышениеРегламента,
	|		Количество КАК Количество,
	|		Услуга.ЕдиницаИзмерения КАК УслугаЕдиницаИзмерения,
	|		Цена КАК Цена,
	|		НДС КАК НДС,
	|		Скидка КАК Скидка,
	|		Сумма КАК Сумма,
	|		Услуга.ТипУслуги КАК ТипУслуги,
	|		Услуга.ТипУслуги.Порядок КАК УслугаТипУслугиПорядок,
	|		Услуга.НаименованиеНаАнглийском КАК УслугаНаименованиеНаАнглийском,
	|		Услуга.ЕдиницаИзмерения.НаименованиеНаАнглийскомЯзыке КАК УслугаЕдиницаИзмеренияНаименованиеНаАнглийскомЯзыке,
	|		Валюта КАК Валюта
	|	) КАК Услуги,
	|	ФормаС.ИтогоНДС КАК ИтогоНДС,
	|	ФормаС.Итого - ФормаС.ИтогоНДС КАК ИтогоБезНДС,
	|	ФормаС.Номер КАК Номер,
	|	ФормаС.Представитель КАК Представитель,
	|	ФормаС.НомерБорта КАК НомерБорта,
	|	ОтветственныеФормаС.Пользователь КАК Диспетчер,
	|	ФормаС.Примечание КАК Примечание,
	|	ФормаС.Прилет.АэропортВылета КАК ПрилетАэропортВылета,
	|	ФормаС.Прилет.АэропортПрилета КАК ПрилетАэропортПрилета,
	|	ФормаС.Вылет.АэропортПрилета КАК ВылетАэропортПрилета,
	|	ФормаС.Прилет.АэропортВылета.НаименованиеНаАнглийском КАК ПрилетАэропортВылетаНаименованиеНаАнглийском,
	|	ФормаС.Прилет.АэропортПрилета.НаименованиеНаАнглийском КАК ПрилетАэропортПрилетаНаименованиеНаАнглийском,
	|	ФормаС.Вылет.АэропортПрилета.НаименованиеНаАнглийском КАК ВылетАэропортПрилетаНаименованиеНаАнглийском
	|ИЗ
	|	РегистрСведений.ОтветственныеФормаС КАК ОтветственныеФормаС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ФормаС КАК ФормаС
	|		ПО ОтветственныеФормаС.Регистратор = ФормаС.Ссылка
	|ГДЕ
	|	ФормаС.Ссылка В(&Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	УслугаТипУслугиПорядок,
	|	НомерСтроки";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьУслугиШапка = Макет.ПолучитьОбласть("УслугиШапка");
	ОбластьУслуги = Макет.ПолучитьОбласть("Услуги");
	Подвал = Макет.ПолучитьОбласть("Подвал");
	
	ОбластьЗаголовок1 = Макет.ПолучитьОбласть("Заголовок1");
	Шапка1 = Макет.ПолучитьОбласть("Шапка1");
	ОбластьУслугиШапка1 = Макет.ПолучитьОбласть("УслугиШапка1");
	ОбластьУслуги1 = Макет.ПолучитьОбласть("Услуги1");
	Подвал1 = Макет.ПолучитьОбласть("Подвал1");
	
	ОбластьЗаголовок2 = Макет.ПолучитьОбласть("Заголовок2");
	Шапка2 = Макет.ПолучитьОбласть("Шапка2");
	ОбластьУслугиШапка2 = Макет.ПолучитьОбласть("УслугиШапка2");
	ОбластьУслуги2 = Макет.ПолучитьОбласть("Услуги2");
	Подвал2 = Макет.ПолучитьОбласть("Подвал2");
	
	УслугиТип = Макет.ПолучитьОбласть("УслугиТип");
	
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Если Выборка.ВладелецВС.ВидКонтрагента = Перечисления.ВидыПолета.Российский Тогда 
			ОбластьЗаголовок.Параметры.Заполнить(Выборка);
			ТабДок.Вывести(ОбластьЗаголовок);
			Шапка.Параметры.Заполнить(Выборка);
			Шапка.Параметры.Направление = "" + Выборка.ПрилетАэропортВылета + "-" + Выборка.ПрилетАэропортПрилета + "-"  + Выборка.ВылетАэропортПрилета;
			ТабДок.Вывести(Шапка, Выборка.Уровень());
			ТабДок.Вывести(ОбластьУслугиШапка);
		ИначеЕсли Выборка.ВладелецВС.ВидКонтрагента = Перечисления.ВидыПолета.Ведомственный Тогда 
			ОбластьЗаголовок1.Параметры.Заполнить(Выборка);
			ТабДок.Вывести(ОбластьЗаголовок1);
			Шапка1.Параметры.Заполнить(Выборка);
			Шапка1.Параметры.Направление = "" + Выборка.ПрилетАэропортВылета + "-" + Выборка.ПрилетАэропортПрилета + "-"  + Выборка.ВылетАэропортПрилета;
			ТабДок.Вывести(Шапка1, Выборка.Уровень());
			ТабДок.Вывести(ОбластьУслугиШапка1);
		ИначеЕсли Выборка.ВладелецВС.ВидКонтрагента = Перечисления.ВидыПолета.Иностранный Тогда 
			ОбластьЗаголовок2.Параметры.Заполнить(Выборка);
			ТабДок.Вывести(ОбластьЗаголовок2);
			Шапка2.Параметры.Заполнить(Выборка);
			Шапка2.Параметры.Направление = "" + Выборка.ПрилетАэропортВылетаНаименованиеНаАнглийском + "-" + Выборка.ПрилетАэропортПрилетаНаименованиеНаАнглийском + "-"  + Выборка.ВылетАэропортПрилетаНаименованиеНаАнглийском;
			ТабДок.Вывести(Шапка2, Выборка.Уровень());
			ТабДок.Вывести(ОбластьУслугиШапка2);	
		КонецЕсли;	
				
		ВыборкаУслуги = Выборка.Услуги.Выбрать();
		ТекущийТип = Перечисления.ТипУслуги.ПустаяСсылка();
		Пока ВыборкаУслуги.Следующий() Цикл
			УслугиТип.Параметры.Заполнить(ВыборкаУслуги);
			Если ВыборкаУслуги.ТипУслуги <> ТекущийТип Тогда 
				ТабДок.Вывести(УслугиТип, ВыборкаУслуги.Уровень());
				ТекущийТип=УслугиТип.Параметры.ТипУслуги;
			КонецЕсли;	
			
			Если Выборка.ВладелецВС.ВидКонтрагента = Перечисления.ВидыПолета.Российский Тогда 
				ОбластьУслуги.Параметры.Заполнить(ВыборкаУслуги);
				ТабДок.Вывести(ОбластьУслуги, ВыборкаУслуги.Уровень());
			ИначеЕсли Выборка.ВладелецВС.ВидКонтрагента = Перечисления.ВидыПолета.Ведомственный Тогда 
				ОбластьУслуги1.Параметры.Заполнить(ВыборкаУслуги);
				ТабДок.Вывести(ОбластьУслуги1, ВыборкаУслуги.Уровень());
			ИначеЕсли Выборка.ВладелецВС.ВидКонтрагента = Перечисления.ВидыПолета.Иностранный Тогда 
				ОбластьУслуги2.Параметры.Заполнить(ВыборкаУслуги);
				
				
				Если ВыборкаУслуги.ПревышениеРегламента Тогда 
					ОбластьУслуги2.Параметры.ПревышениеРегламента = "да / yes";		
				Иначе 
					ОбластьУслуги2.Параметры.ПревышениеРегламента = "нет / no";
				КонецЕсли;	
				
				ОбластьУслуги2.Параметры.Услуга = "" + ВыборкаУслуги.Услуга + " / " + ВыборкаУслуги.УслугаНаименованиеНаАнглийском;
				ОбластьУслуги2.Параметры.УслугаЕдиницаИзмерения = "" + ВыборкаУслуги.УслугаЕдиницаИзмерения + " / " + ВыборкаУслуги.УслугаЕдиницаИзмеренияНаименованиеНаАнглийскомЯзыке;
				Если ВыборкаУслуги.Валюта Тогда 
					ОбластьУслуги2.Параметры.Ценауе = Окр(ВыборкаУслуги.Цена / Выборка.КурсВалюты ,2);
				Иначе 
					ОбластьУслуги2.Параметры.Ценауе = "";
				КонецЕсли;
				Если ВыборкаУслуги.Услуга = Справочники.Услуги.СборЗаСверхнормативнуюСтоянкуИ Тогда 
					ОбластьУслуги2.Параметры.Количество = Окр(ВыборкаУслуги.Количество / Выборка.Масса,2);
					ОбластьУслуги2.Параметры.Цена = Окр(ВыборкаУслуги.Цена * Выборка.Масса,2);
					ОбластьУслуги2.Параметры.Ценауе = "";
					ОбластьУслуги2.Параметры.Сумма = Окр(ВыборкаУслуги.Количество / Выборка.Масса,2) * Окр(ВыборкаУслуги.Цена * Выборка.Масса,2); 
				КонецЕсли;	
				ТабДок.Вывести(ОбластьУслуги2, ВыборкаУслуги.Уровень());
			КонецЕсли;	
			
		КонецЦикла;

		Если Выборка.ВладелецВС.ВидКонтрагента = Перечисления.ВидыПолета.Российский Тогда 
			Подвал.Параметры.Заполнить(Выборка);
			ТабДок.Вывести(Подвал);
		ИначеЕсли Выборка.ВладелецВС.ВидКонтрагента = Перечисления.ВидыПолета.Ведомственный Тогда 
			ФормСтрока = "Л = ru_RU; ДП = Истина";
			ПарПредмета="рубль,рубля,рублей,м,копейка,копейки,копеек,м,2";
			Подвал1.Параметры.СуммаПрописью = "Работы выполнены в сумме " + ЧислоПрописью(Выборка.Итого, ФормСтрока, ПарПредмета) + " в полном объеме и в срок";
			Подвал1.Параметры.Заполнить(Выборка);
			ТабДок.Вывести(Подвал1);
		ИначеЕсли Выборка.ВладелецВС.ВидКонтрагента = Перечисления.ВидыПолета.Иностранный Тогда 
			Подвал2.Параметры.Заполнить(Выборка);
			ТабДок.Вывести(Подвал2);			
		КонецЕсли;
		
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры
